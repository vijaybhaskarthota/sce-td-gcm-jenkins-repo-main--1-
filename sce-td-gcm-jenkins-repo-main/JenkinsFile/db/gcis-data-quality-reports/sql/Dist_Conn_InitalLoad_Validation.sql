SET PAGESIZE 10000
SET FEED OFF
SET LINESIZE 160

column Validations heading "Validations" Format A120
column COUNT heading "COUNT" Format 9999999999
column Remarks heading "Remarks" Format A20

SELECT 'Circuits missed to be processed in Distribution Connectivity Initial Load' AS Validations, CIRCT_COUNT AS COUNT, 
(CASE WHEN CIRCT_COUNT = 0 THEN 'PASS' ELSE 'FAIL' END) AS Remarks FROM 
(select count(DISTINCT CIRCUIT_NAME) as CIRCT_COUNT from TCGACDS.circuit_head  C where CIRCT_STAT_CD<>'F' 
and Not exists (select 1 from TCGACDS.gcm_connectivity  G where G.primary_ckt=C.CIRCUIT_NAME))
union
SELECT 'Circuit present in the connectivity table but not in circuit head' AS Validations, CIRCT_COUNT AS COUNT, 
(CASE WHEN CIRCT_COUNT = 0 THEN 'PASS' ELSE 'FAIL' END) AS Remarks FROM (
select count(*) AS CIRCT_COUNT from (
(select distinct primary_ckt from TCGACDS.gcm_connectivity  G where  
Not exists (select 1 from TCGACDS.circuit_head  C where G.primary_ckt=C.CIRCUIT_NAME
AND CIRCT_STAT_CD<>'F'))))
union
SELECT 'Circuits with multiple version count in the Connectivity table' AS Validations, CIRCT_COUNT AS COUNT, 'Info' AS Remarks FROM (
select count(*) AS CIRCT_COUNT from (
SELECT COUNT(distinct PRIMARY_CKT)FROM TCGACDS.GCM_CONNECTIVITY GROUP BY PRIMARY_CKT 
HAVING COUNT(DISTINCT VERSION) > 1))
union 
SELECT 'Circuit present in the connectivity table but not in Data store table' AS Validations, CIRCT_COUNT AS COUNT, 
(CASE WHEN CIRCT_COUNT = 0 THEN 'PASS' ELSE 'FAIL' END) AS Remarks FROM (
select count(*) AS CIRCT_COUNT from (
SELECT DISTINCT PRIMARY_CKT,VERSION FROM TCGACDS.GCM_CONNECTIVITY G where NOT EXISTS
(SELECT 1 FROM TCGACDS.GCM_CONN_DATA_STORE DS WHERE DS.PRIMARY_CKT=G.PRIMARY_CKT AND 
DS.VERSION=G.VERSION AND  DS.VERSION IS NOT NULL)))
union
SELECT 'Circuit present in the Data store table but not in the connectivity Table' AS Validations, CIRCT_COUNT AS COUNT, 
(CASE WHEN CIRCT_COUNT = 0 THEN 'PASS' ELSE 'FAIL' END) AS Remarks FROM (
select count(*) AS CIRCT_COUNT from (
SELECT  DISTINCT PRIMARY_CKT,VERSION FROM TCGACDS.GCM_CONN_DATA_STORE DS WHERE DS.VERSION IS NOT NULL AND NOT EXISTS
( SELECT 1 FROM TCGACDS.GCM_CONNECTIVITY C WHERE DS.PRIMARY_CKT=C.PRIMARY_CKT AND DS.VERSION=C.VERSION)))
union
SELECT 'Circuits with multiple version count in Data store Table' AS Validations, CIRCT_COUNT AS COUNT, 'Info' AS Remarks FROM (
select count(*) AS CIRCT_COUNT from (
SELECT distinct PRIMARY_CKT FROM TCGACDS.GCM_CONN_DATA_STORE GROUP BY PRIMARY_CKT HAVING COUNT(DISTINCT VERSION)>1))
union
SELECT 'Circuits missed to re-populate' AS Validations, CIRCT_COUNT AS COUNT, 
(CASE WHEN CIRCT_COUNT = 0 THEN 'PASS' ELSE 'FAIL' END) AS  Remarks FROM (
select count(*) AS CIRCT_COUNT from (
(SELECT DISTINCT ELEMENT_NAME FROM TCGACDS.GCM_GEOSPATIAL_FILE_STATUS WHERE ELEMENT_TYPE = 'CIRCUIT' 
AND STATUS <> 'COMPLETED' 
AND IS_PAYLOAD_POPULATED <> 'Y' AND START_TIME > SYSDATE -1)))
union
SELECT 'GML Circuits missed to be process during Re-population process' AS Validations, CIRCT_COUNT AS COUNT, 
'Info' AS Remarks FROM (
select count(*) AS CIRCT_COUNT from (
(SELECT DISTINCT ELEMENT_NAME FROM TCGACDS.GCM_GEOSPATIAL_FILE_STATUS WHERE ELEMENT_TYPE = 'CIRCUIT' 
AND FILE_TYPE = 'GML' AND STATUS = 'UNPROCESSED' 
AND IS_PAYLOAD_POPULATED = 'Y' AND START_TIME > SYSDATE -1)))
union
SELECT 'Circuit present in Connectivity table but miised to process during Re-population process ' AS Validations, CIRCT_COUNT AS COUNT, 
(CASE WHEN CIRCT_COUNT = 0 THEN 'PASS' ELSE 'FAIL' END) AS Remarks FROM (
select count(*) AS CIRCT_COUNT from (
(SELECT DISTINCT PRIMARY_CKT,VERSION FROM TCGACDS.GCM_CONNECTIVITY MINUS
SELECT DISTINCT ELEMENT_NAME, VERSION FROM TCGACDS.GCM_GEOSPATIAL_FILE_STATUS WHERE ELEMENT_TYPE = 'CIRCUIT' 
AND FILE_TYPE = 'GML' AND STATUS = 'COMPLETED' 
AND IS_PAYLOAD_POPULATED = 'Y')))
union
SELECT 'GML Circuits re-populated in the Geospatial file status table but not present in the connectivity table' AS Validations, 
CIRCT_COUNT AS COUNT, 
(CASE WHEN CIRCT_COUNT = 0 THEN 'PASS' ELSE 'FAIL' END) AS  Remarks FROM (
select count(*) AS CIRCT_COUNT from (
(SELECT DISTINCT ELEMENT_NAME, VERSION FROM TCGACDS.GCM_GEOSPATIAL_FILE_STATUS WHERE 
ELEMENT_TYPE = 'CIRCUIT' AND FILE_TYPE = 'GML' AND STATUS = 'COMPLETED' 
AND IS_PAYLOAD_POPULATED = 'Y' MINUS
SELECT DISTINCT PRIMARY_CKT, VERSION FROM TCGACDS.GCM_CONNECTIVITY)))
union
SELECT 'Circuits present in the GCM_CONNECTIVITY table but not present in GCM_CIRCUIT_CHANGE_INFO Table' AS Validations, 
CIRCT_COUNT AS COUNT, 
(CASE WHEN CIRCT_COUNT = 0 THEN 'PASS' ELSE 'FAIL' END) AS  Remarks FROM (
select count(*) as CIRCT_COUNT FROM (
SELECT  DISTINCT PRIMARY_CKT FROM TCGACDS.GCM_CONNECTIVITY 
MINUS
SELECT  DISTINCT CIRCUIT_NAME FROM TCGACDS.GCM_CIRCUIT_CHANGE_INFO 
WHERE  CHANGE_TYPE IN ('ADDED', 'UPDATED') AND CHANGED_DATE > = (SELECT MIN(DT_TIME_INFO) FROM TCGACDS.GCM_CONNECTIVITY)))
union
SELECT 'Circuits present in the GCM_CIRCUIT_CHANGE_INFO table but not present in GCM_CONNECTIVITY Table' AS Validations, 
CIRCT_COUNT AS COUNT, 
(CASE WHEN CIRCT_COUNT = 0 THEN 'PASS' ELSE 'FAIL' END) AS  Remarks FROM (
select count(*) as CIRCT_COUNT FROM (
SELECT  DISTINCT CIRCUIT_NAME FROM TCGACDS.GCM_CIRCUIT_CHANGE_INFO CKT
WHERE  CKT.CHANGE_TYPE = 'DELETED' AND CKT.CHANGED_DATE > = (SELECT MIN(DT_TIME_INFO) FROM TCGACDS.GCM_CONNECTIVITY) 
AND EXISTS (SELECT 1 FROM TCGACDS.GCM_CONNECTIVITY CON WHERE CON.PRIMARY_CKT = CKT.CIRCUIT_NAME)));