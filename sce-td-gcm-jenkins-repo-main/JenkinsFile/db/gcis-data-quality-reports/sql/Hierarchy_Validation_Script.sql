SET SERVEROUTPUT ON;
DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(SELECT count(*)  FROM TCGACDS.GCM_SUB_HIER_MFL_DATALOAD MINUS 
SELECT  count(*) FROM TCGACDS.GCM_SUB_HIER_MFL_STG);
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('DIFF BTW MFL_DATALOAD AND MFL_STG SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('DIFF BTW MFL_DATALOAD AND MFL_STG NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(SELECT * FROM TCGACDS.GCM_SUB_HIER_MFL_STG MINUS
SELECT * FROM TCGACDS.GCM_SUB_HIER_MFL_DATALOAD);
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('DIFF BTW MFL_STG AND MFL_DATALOAD SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('DIFF BTW MFL_STG AND MFL_DATALOAD NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/

DECLARE 
V_COUNT NUMBER;
V_FTR_TYP VARCHAR2(255 BYTE);
BEGIN 
    SELECT COUNT(*) INTO V_COUNT FROM(SELECT DISTINCT FTR_TYPE FROM TCGACDS.GCM_SUB_HIER_NODE$_FINAL MINUS
SELECT DISTINCT FTR_TYPE FROM TCGACDS.GCM_SUB_HIER_NODE$_STG);
IF V_COUNT<>0
THEN
DBMS_OUTPUT.PUT_LINE('DIFFERENCE IS PRESENT  |'|| V_COUNT);
ELSE 
DBMS_OUTPUT.PUT_LINE('DIFFERENCE NOT PRESENT |'|| V_COUNT); 
 END IF;
 END;
 /
 --27 
 
DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(SELECT NODE_KEY FROM TCGACDS.GCM_SUB_HIER_NODE$_STG GROUP BY NODE_KEY HAVING COUNT(*)>1);
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('NODE_KEY SHOULDNOT BE GREATER THAN 1 SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('NODE_KEY SHOULDNOT BE GREATER THAN 1 NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/
 --24

DECLARE 
V_COUNT NUMBER;
V_FTR_TYP VARCHAR2(255 BYTE);
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(SELECT DISTINCT FTR_TYPE FROM TCGACDS.GCM_SUB_HIER_NODE$_STG MINUS
SELECT DISTINCT FTR_TYPE FROM TCGACDS.GCM_SUB_HIER_NODE$_FINAL);
IF V_COUNT<>0
THEN
DBMS_OUTPUT.PUT_LINE('DIFF BETWEEN NODE$_STG AND NODE$_FINAL SUCCESSFUL |'|| V_COUNT);
ELSE 
DBMS_OUTPUT.PUT_LINE('DIFF BETWEEN NODE$_STG AND NODE$_FINAL NEED TO VALIDATE |'|| V_COUNT); 
  END IF;
  END;
  /
  
DECLARE 
V_NODE_COUNT NUMBER;
V_META_COUNT NUMBER;
BEGIN 

SELECT COUNT(1) INTO V_NODE_COUNT FROM TCGACDS.GCM_SUB_HIER_NODE$_STG;
SELECT COUNT(1)INTO V_META_COUNT FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG;

IF V_NODE_COUNT=V_META_COUNT
THEN 
DBMS_OUTPUT.PUT_LINE('TOTAL COUNT BTW FAC_META_STG AND NODE$_STG SHOULD MATCH - SUCCESSFUL |'||V_NODE_COUNT ||' | '|| V_META_COUNT );
ELSE
DBMS_OUTPUT.PUT_LINE('TOTAL COUNT BTW FAC_META_STG AND NODE$_STG SHOULD MATCH - NEED TO VALIDATE  | '||V_NODE_COUNT||' | '|| V_META_COUNT );
END IF;
END;
  
  /
  --32 ,33

DECLARE 
V_NODE_COUNT NUMBER;
V_META_COUNT NUMBER;
BEGIN 


SELECT COUNT(DISTINCT FTR_TYPE) INTO V_NODE_COUNT FROM TCGACDS.GCM_SUB_HIER_NODE$_STG;

SELECT COUNT(DISTINCT GCM_SUB_NAME) INTO V_META_COUNT FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE BANK_tYPE='A-BANK';

IF V_NODE_COUNT=V_META_COUNT
THEN 
DBMS_OUTPUT.PUT_LINE('COUNT OF A_BANK BTW FAC_META_STG AND NODE$_STG SHOULD MATCH |'||V_NODE_COUNT ||' | '|| V_META_COUNT );
ELSE
DBMS_OUTPUT.PUT_LINE('COUNT OF A_BANK BTW FAC_META_STG AND NODE$_STG SHOULD MATCH  | '||V_NODE_COUNT||' | '|| V_META_COUNT );
END IF;
END;
/
--35

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(SELECT DISTINCT GCM_SUB_NAME FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE BANK_tYPE='A-BANK' 
AND GCM_SUB_NAME NOT IN (SELECT DISTINCT FTR_TYPE FROM TCGACDS.GCM_SUB_HIER_NODE$_STG));
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('COUNT OF A_BANK BTW FAC_META_STG AND NODE$_STG SHOULD BE ZERO SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('COUNT OF A_BANK BTW FAC_META_STG AND NODE$_STG SHOULD BE ZERO NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/
--38

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(SELECT DISTINCT FTR_TYPE FROM TCGACDS.GCM_SUB_HIER_NODE$_STG WHERE  FTR_TYPE NOT IN 
(SELECT DISTINCT GCM_SUB_NAME FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE BANK_TYPE='A-BANK'));
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('COUNT OF A-BANK BTW NODE$_STG AND FAC_META_STG SHOULD BE ZERO SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('COUNT OF A-BANK BTW NODE$_STG AND FAC_META_STG SHOULD BE ZERO NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/
--41

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(SELECT * FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE SUB_KEY NOT IN (SELECT NODE_KEY FROM TCGACDS.GCM_SUB_HIER_NODE$_STG));
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('COUNT BTW FAC_META_STG AND NODE$_STG SHOULD BE ZERO SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('COUNT BTW FAC_META_STG AND NODE$_STG SHOULD BE ZERO NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/
--42

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(SELECT * FROM TCGACDS.GCM_SUB_HIER_NODE$_STG WHERE NODE_KEY NOT IN (SELECT SUB_KEY FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG));
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('COUNT BTW NODE$_STG AND FAC_META_STG SHOULD BE ZERO SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('COUNT BTW NODE$_STG AND FAC_META_STG SHOULD BE ZERO NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;

--ABOVE COUNTS SHOULD MATCH
/
--46

DECLARE 
V_COUNT NUMBER;
BEGIN
 SELECT COUNT(1)INTO V_COUNT FROM (SELECT FTR_TYPE,NODE_NAME,NODE_TYPE,REFERENCE_sOR,NODE_KEY FROM TCGACDS.GCM_SUB_HIER_NODE$_STG MINUS
SELECT FTR_TYPE,NODE_NAME,NODE_TYPE,REFERENCE_sOR,NODE_KEY FROM TCGACDS.GCM_SUB_HIER_NODE$_FINAL);
 IF V_COUNT <>0
 THEN
DBMS_OUTPUT.PUT_LINE('COUNT DIFFERENCE BETWEEN NODE$_STG AND NODE$_FINAL SUCCESSFUL |'|| V_COUNT);
END IF;
END;
/
--49

DECLARE 
V_COUNT NUMBER;
BEGIN
 SELECT COUNT(1)INTO V_COUNT FROM (SELECT FTR_TYPE,NODE_NAME,NODE_TYPE,REFERENCE_sOR,NODE_KEY FROM TCGACDS.GCM_SUB_HIER_NODE$_FINAL MINUS
SELECT FTR_TYPE,NODE_NAME,NODE_TYPE,REFERENCE_sOR,NODE_KEY FROM TCGACDS.GCM_SUB_HIER_NODE$_STG);
 IF V_COUNT <>0
 THEN
DBMS_OUTPUT.PUT_LINE('COUNT DIFFERENCE BETWEEN NODE$_FINAL AND NODE$_STG |'|| V_COUNT);
END IF;
END;
/
--52

DECLARE 
V_COUNT NUMBER;
BEGIN
 SELECT COUNT(1)INTO V_COUNT FROM (SELECT * FROM TCGACDS.GCM_SUB_HIER_NODE$_STG WHERE NODE_ID NOT IN 
(
SELECT DISTINCT START_NODE_ID AS NODE_ID FROM TCGACDS.GCM_SUB_HIER_LINK$_STG
UNION
SELECT DISTINCT END_NODE_ID AS NODE_ID FROM TCGACDS.GCM_SUB_HIER_LINK$_STG
));
 IF V_COUNT <>0
 THEN
DBMS_OUTPUT.PUT_LINE('SUCCESSFUL |'|| V_COUNT);
ELSE 
DBMS_OUTPUT.PUT_LINE('NEED TO VALIDATE |'|| V_COUNT); 
END IF;
END;
/
--59

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(
SELECT NODE_ID FROM (
SELECT DISTINCT START_NODE_ID AS NODE_ID FROM TCGACDS.GCM_SUB_HIER_LINK$_STG
UNION
SELECT DISTINCT END_NODE_ID AS NODE_ID FROM TCGACDS.GCM_SUB_HIER_LINK$_STG
) WHERE NODE_ID NOT IN (SELECT NODE_ID FROM TCGACDS.GCM_SUB_HIER_NODE$_STG));
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('ALL NODES ARE POPULATED SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('ALL NODES ARE POPULATED NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/
--DISCONNECTED GRAPH VALIDATION

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(SELECT * FROM TCGACDS.GCM_SUB_HIER_LINK$_STG WHERE START_NODE_ID NOT IN (SELECT DISTINCT END_NODE_ID FROM TCGACDS.GCM_SUB_HIER_LINK$_STG) AND 
START_NODE_ID NOT IN (SELECT DISTINCT NODE_ID FROM TCGACDS.GCM_SUB_HIER_NODE$_STG
WHERE NODE_NAME = FTR_TYPE));
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('DISCONNECTED GRAPH VALIDATION | '||'SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('DISCONNECTED GRAPH VALIDATION | '||'NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
--NO DISCONNECTED GRAPH EXISTS
/
--72

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(SELECT COUNT(NODE_NAME), NODE_NAME FROM TCGACDS.GCM_SUB_HIER_NODE$_STG
WHERE NODE_TYPE IN ('SUBSTATION','DISTRIBUTION') GROUP BY NODE_NAME HAVING COUNT(NODE_NAME)>1);
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('REPEATED SUBSTATIONS | '||'SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('REPEATED SUBSTATIONS | '||'NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/
--76

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(SELECT COUNT(NODE_ID), NODE_ID FROM TCGACDS.GCM_SUB_HIER_NODE$_STG
WHERE NODE_TYPE IN ('SUBSTATION','DISTRIBUTION','CIRCUIT') GROUP BY NODE_ID HAVING COUNT(NODE_ID)>1);
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('REPEATED SUBSTATIONS | '||'SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('REPEATED SUBSTATIONS |'||'NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/


--81 , 80

DECLARE 
V_COUNT NUMBER;
V_CNT NUMBER;
BEGIN
 SELECT COUNT(1)INTO V_COUNT FROM (SELECT COUNT(*) , LINK_NAME FROM TCGACDS.GCM_SUB_HIER_LINK$_STG GROUP BY LINK_NAME HAVING COUNT(*)>=1);
 SELECT COUNT(1)INTO V_CNT FROM (SELECT COUNT(*) , FTR_TYPE FROM TCGACDS.GCM_SUB_HIER_NODE$_STG GROUP BY FTR_TYPE HAVING COUNT(*)>1);
 IF V_COUNT <>0 AND V_CNT<>0 AND V_COUNT=V_CNT
 THEN
DBMS_OUTPUT.PUT_LINE(' TO VALIDATE IF ALL NODES POPULATED IN NODE TABLE DO EXIST IN LINK TABLE SUCCESSFUL |'|| V_COUNT);
ELSE 
DBMS_OUTPUT.PUT_LINE('TO VALIDATE IF ALL NODES POPULATED IN NODE TABLE DO EXIST IN LINK TABLE NEED TO VALIDATE |'|| V_COUNT); 
END IF;
END;
/
 -- 83
  
DECLARE 
V_COUNT NUMBER;
BEGIN
SELECT COUNT(*) INTO V_COUNT FROM TCGACDS.GCM_SUB_HIER_NODE$_STG WHERE SAP_FLOC_NO IS NULL;
 IF V_COUNT <>0
 THEN
DBMS_OUTPUT.PUT_LINE('COUNT OF NODE$_STG(SAP_FLOC_NO IS NULL) SUCCESSFUL |'|| V_COUNT);
ELSE 
DBMS_OUTPUT.PUT_LINE('COUNT OF NODE$_STG(SAP_FLOC_NO IS NULL) NEED TO VALIDATE |'|| V_COUNT); 
END IF;
END;
/
--87  
  
DECLARE 
V_COUNT NUMBER;
--V_FTR_TYP VARCHAR2(255 BYTE);
BEGIN 
    SELECT COUNT(*) INTO V_COUNT FROM(SELECT DISTINCT GCM_SUB_NAME FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG, TCGACDS.EMS_SUBSTATION WHERE SUB_ID=SUBSTATION_ID AND SUB_NO IS NULL 
AND GCM_SUB_NAME IN (SELECT NODE_NAME FROM TCGACDS.GCM_SUB_HIER_NODE$_STG WHERE SAP_fLOC_NO IS NULL));
DBMS_OUTPUT.PUT_LINE( V_COUNT);
IF V_COUNT<>0
THEN
DBMS_OUTPUT.PUT_LINE('COUNT OF GCM_SUB_NAME SUCCESSFUL |'|| V_COUNT);
ELSE 
DBMS_OUTPUT.PUT_LINE('COUNT OF GCM_SUB_NAME NEED TO VALIDATE |'|| V_COUNT);
  END IF;
  END;
/
--90

DECLARE 
V_COUNT NUMBER;
--V_FTR_TYP VARCHAR2(255 BYTE);
BEGIN 
    SELECT COUNT(*) INTO V_COUNT FROM(SELECT * FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE BANK_TYPE IS NULL AND NODE_cATEGORY='SUBSTATION' AND 
SUB_KEY IN (SELECT NODE_KEY FROM TCGACDS.GCM_SUB_HIER_NODE$_STG WHERE NODE_TYPE<>'CIRCUIT') AND PRIM_VOLTAGE IS NOT NULL);--1
IF V_COUNT<>0
THEN
DBMS_OUTPUT.PUT_LINE('SUBSTATION DATA WHERE BANK TYPE IS NULL AND PRIM_VOLTAGE IS NOT NULL SUCCESSFUL |'|| V_COUNT);
ELSE 
DBMS_OUTPUT.PUT_LINE('SUBSTATION DATA WHERE BANK TYPE IS NULL AND PRIM_VOLTAGE IS NOT NULL NEED TO VALIDATE |'|| V_COUNT);
  END IF;
  END;
/
  --97

DECLARE 
V_COUNT NUMBER;
BEGIN
 SELECT COUNT(*) INTO V_COUNT FROM(SELECT * FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE SUB_TYPE IS NULL AND REFERENCE_SOR='SAP');
 IF V_COUNT <>0
 THEN
DBMS_OUTPUT.PUT_LINE('COUNT OF SAP(SUB_TYPE IS NULL) IN FAC_META_STG SUCCESSFUL |'|| V_COUNT);
ELSE 
DBMS_OUTPUT.PUT_LINE('COUNT OF SAP(SUB_TYPE IS NULL) IN FAC_META_STG NEED TO VALIDATE |'|| V_COUNT); 
END IF;
END;
/
--98

DECLARE 
V_COUNT NUMBER;
BEGIN
 SELECT COUNT(1)INTO V_COUNT FROM (SELECT * FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE BANK_TYPE IS NULL AND REFERENCE_SOR='SAP');
 IF V_COUNT <>0
 THEN
DBMS_OUTPUT.PUT_LINE('COUNT OF SAP(BANK_TYPE IS NULL) IN FAC_META_STG SUCCESSFUL |'|| V_COUNT);
ELSE 
DBMS_OUTPUT.PUT_LINE('COUNT OF SAP(BANK_TYPE IS NULL) IN FAC_META_STG NEED TO VALIDATE |'|| V_COUNT); 
END IF;
END;
/
--99

DECLARE 
V_COUNT NUMBER;
BEGIN
 SELECT COUNT(1)INTO V_COUNT FROM (SELECT * FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE BANK_TYPE IS NOT NULL AND REFERENCE_SOR='SAP');
 IF V_COUNT <>0
 THEN
DBMS_OUTPUT.PUT_LINE('COUNT OF SAP(BANK_TYPE IS NOT NULL) IN FAC_META_STG SUCCESSFUL |'|| V_COUNT);
ELSE 
DBMS_OUTPUT.PUT_LINE('COUNT OF SAP(BANK_TYPE IS NOT NULL) IN FAC_META_STG NEED TO VALIDATE |'|| V_COUNT); 
END IF;
END;
/
--100

DECLARE 
V_COUNT NUMBER;
BEGIN
 SELECT COUNT(1)INTO V_COUNT FROM (SELECT * FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE REFERENCE_SOR='SAP');
 IF V_COUNT <>0
 THEN
DBMS_OUTPUT.PUT_LINE(' COUNT OF SAP IN FAC_META_STG SUCCESSFUL |'|| V_COUNT);
ELSE 
DBMS_OUTPUT.PUT_LINE(' COUNT OF SAP IN FAC_META_STG NEED TO VALIDATE |'|| V_COUNT); 
END IF;
END;
/
--101

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(
SELECT * FROM TCGACDS.GCM_SUB_HIER_NODE$_STG WHERE REFERENCE_SOR='SAP' 
AND NODE_NAME NOT IN (SELECT GCM_SUB_NAME FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE REFERENCE_SOR='SAP'));
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('SAP DATA IN NODE$ STG AND FAC META STG SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('SAP DATA IN NODE$ STG AND FAC META STG NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/
--103

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(
SELECT * FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE REFERENCE_SOR='SAP' 
AND GCM_SUB_NAME NOT IN (SELECT NODE_NAME FROM TCGACDS.GCM_SUB_HIER_NODE$_STG WHERE REFERENCE_SOR='SAP'));
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('SAP DATA IN FAC META STG AND NODE$ STG SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('SAP DATA IN FAC META STG AND NODE$ STG NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/
--105

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(
SELECT * FROM TCGACDS.GCM_SUB_HIER_NODE$_STG WHERE REFERENCE_SOR='EMS' 
AND NODE_NAME NOT IN (SELECT GCM_SUB_NAME FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE REFERENCE_SOR='EMS'));
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('EMS DATA IN NODE$ STG AND FAC META STG SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('EMS DATA IN NODE$ STG AND FAC META STG NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/
 
--107
 
DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(
SELECT * FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE REFERENCE_SOR='EMS' 
AND GCM_SUB_NAME NOT IN (SELECT NODE_NAME FROM TCGACDS.GCM_SUB_HIER_NODE$_STG WHERE REFERENCE_SOR='EMS'));
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('EMS DATA IN FAC META STG AND NODE$ STG  SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('EMS DATA IN FAC META STG AND NODE$ STG NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/
--109

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(
SELECT * FROM TCGACDS.GCM_SUB_HIER_NODE$_STG WHERE REFERENCE_SOR='GESW' 
AND NODE_NAME NOT IN (SELECT SUB_NAME FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE REFERENCE_SOR='GESW'));
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('GESW DATA IN NODE$ STG AND FAC META STG SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('GESW DATA IN NODE$ STG AND FAC META STG NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/
--111

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(
SELECT * FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE REFERENCE_SOR='GESW' 
AND SUB_NAME NOT IN (SELECT NODE_NAME FROM TCGACDS.GCM_SUB_HIER_NODE$_STG WHERE REFERENCE_SOR='GESW'));
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('GESW DATA IN FAC META STG AND NODE$ STG SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('GESW DATA IN FAC META STG AND NODE$ STG NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/
--113 

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(
SELECT * FROM TCGACDS.GCM_SUB_HIER_NODE$_STG WHERE REFERENCE_SOR='MFL' 
AND NODE_NAME NOT IN (SELECT GCM_SUB_NAME FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE REFERENCE_SOR='MFL'));
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('MFL DATA IN NODE$ STG AND FAC META STG SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('MFL DATA IN NODE$ STG AND FAC META STG NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/
--115

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(
SELECT * FROM TCGACDS.GCM_SUB_HIER_FAC_META_STG WHERE REFERENCE_SOR='MFL' 
AND GCM_SUB_NAME NOT IN (SELECT NODE_NAME FROM TCGACDS.GCM_SUB_HIER_NODE$_STG WHERE REFERENCE_SOR='MFL'));
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('MFL DATA IN FAC META STG AND NODE STG SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('MFL DATA IN FAC META STG AND NODE STG NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/
--118

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(
SELECT *  FROM TCGACDS.GCM_SUB_HIER_MFL_sTG WHERE CIRCUIT_NAME IN 
(SELECT NODE_NAME FROM TCGACDS.GCM_SUB_HIER_NODE$_STG WHERE SAP_FLOC_NO IS NULL));
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('MFL_STG DATA SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('MFL_STG DATA NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/

--121

DECLARE 
V_COUNT NUMBER;
BEGIN
 SELECT COUNT(1)INTO V_COUNT FROM (SELECT * FROM TCGACDS.GCM_SUB_HIER_NODE$_STG WHERE SAP_FLOC_NO IS NOT NULL AND PRIM_vOLTAGE IS NULL  AND NODE_tYPE='CIRCUIT');
 IF V_COUNT <>0
 THEN
DBMS_OUTPUT.PUT_LINE('NODE$_STG WHERE PRIM_VOLTAGE IS NULL SUCCESSFUL |'|| V_COUNT);
ELSE 
DBMS_OUTPUT.PUT_LINE('NODE$_STG WHERE PRIM_VOLTAGE IS NULL NEED TO VALIDATE |'|| V_COUNT); 
END IF;
END;
/
--147

DECLARE 
V_COUNT NUMBER;
BEGIN
 SELECT COUNT(*) INTO V_COUNT FROM TCGACDS.GCM_SUB_HIER_ACLCON_SUB WHERE MASTER_KEY IS NULL;
 IF V_COUNT =0
 THEN
DBMS_OUTPUT.PUT_LINE('ACLCON_SUB DETAILS FOR MASTER_KEY IS NULL SUCCESSFUL |'|| V_COUNT);
ELSE 
DBMS_OUTPUT.PUT_LINE('ACLCON_SUB DETAILS FOR MASTER_KEY IS NULL SUCCESSFUL NEED TO VALIDATE |'|| V_COUNT); 
END IF;
END;
/
--148

DECLARE 
V_COUNT NUMBER;
BEGIN
 SELECT COUNT(*) INTO V_COUNT FROM TCGACDS.GCM_SUB_HIER_ACLCON_SUB WHERE SUB_KEY IS NULL;
 IF V_COUNT =0
 THEN
DBMS_OUTPUT.PUT_LINE('ACLCON_SUB DETAILS FOR SUB_KEY IS NULL SUCCESSFUL |'|| V_COUNT);
ELSE 
DBMS_OUTPUT.PUT_LINE('ACLCON_SUB DETAILS FOR SUB_KEY IS NULL NEED TO VALIDATE |'|| V_COUNT); 
END IF;
END;
/
--150

DECLARE 
V_COUNT NUMBER;
BEGIN 
SELECT COUNT(*) INTO V_COUNT FROM(
SELECT * FROM TCGACDS.GCM_SUB_HIER_ACLCON_SUB WHERE MASTER_KEY NOT IN 
(SELECT DISTINCT MASTER_KEY FROM TCGACDS.GCM_SUB_HIER_NODE$_STG));
IF V_COUNT=0
THEN 
DBMS_OUTPUT.PUT_LINE('COUNT OF ACLCON_SUB SUCCESSFUL |'|| V_COUNT);
ELSE
DBMS_OUTPUT.PUT_LINE('COUNT OF ACLCON_SUB NEED TO VALIDATE  |'|| V_COUNT);
END IF;
END;
/
--151

DECLARE 
V_COUNT NUMBER;
BEGIN
 SELECT COUNT(1)INTO V_COUNT FROM TCGACDS.GCM_V_SUB_HIER_HIGH_SIDE_CKTS;
 IF V_COUNT <>0
 THEN
DBMS_OUTPUT.PUT_LINE('HIGH_SIDE_CKTS SUCCESSFUL |'|| V_COUNT);
ELSE 
DBMS_OUTPUT.PUT_LINE('HIGH_SIDE_CKTS NEED TO VALIDATE |'|| V_COUNT); 
END IF;
END;
/